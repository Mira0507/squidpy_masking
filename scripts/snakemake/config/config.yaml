# Specify path to conda env
conda_env: '../../env'

# Specify path to a tab-separated sampletable, consisting of 
# the following columns:
# - samplename: unique sample identifier
# - input_vsi: path to a vsi file
sampletable: 'config/sampletable.txt'

# Output directory for converted images
out_converted: '../../images/converted'

# Output directory for masked images
out_masked: "results"

# Specify the series to be converted. 
# NOTE: 
# - Determine the series based on the input metadata. 
# - Select one for multi-channel with a desired resolution
# - If `None`, python specifies one series with the highest resolution
#   and multi-channel data
ser: None

# "Y" or "N". Set to "Y" if you want to save as pyramidal output
# See https://www.microscopesinternational.com/support/kb/article/ngn1076.aspx
pyramidal: Y

# Specify the name of default input image layer in the ImageContainer obj
# Do not change this value unless you want to set a custom name by default
lyr: 'image'

# Specify signal values to be tested for Gaussian smoothing
# Sigma represents the variance for normal distribution
gaussian_sigma: 1

# Specify whether to equalize contrasts
# If set to "Y", your input image is preprocessed by running adaptive
# equalization using scikit-image
equalize: "N"

# Specify whether input images will be cropped
crop_images: "N"

# Specify coordinates to crop images
# This section is omitted if the `crop_images` is set to "N"
crop_height: 0.5
crop_width: 0.5
crop_size: 1000
crop_scale: 1

